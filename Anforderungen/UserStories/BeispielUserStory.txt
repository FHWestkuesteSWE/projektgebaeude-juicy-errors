================================================================================
User Story A
================================================================================

Kurzbeschreibung:
Der Nutzer kann die Raumtemperatur für einen bestimmten Raum anfordern.

Priorität: (X) must | ( ) should | ( ) could | ( ) won't

Abschätzung:
1 Tag

--------------------------------------------------------------------------------
Details
--------------------------------------------------------------------------------
Auf der Konsole des Clients besteht die Möglichkeit, die Raumtemperatur
anzufordern. Der Raum muss dann angegeben (eingegeben oder ausgewählt) werden.
Die entsprechende Anfrage wird an den Server geschickt, worauf dieser die
aktuelle Temperatur vom entsprechenden Sensor abfragt und an den Client
zurückschickt.

Fehlermöglichkeiten:
1 Server nicht erreichbar → Fehlermeldung des Clients
2 Kein Sensor für den Raum vorhanden / zuzuordnen → Fehlermeldung des Servers
3 keine Antwort vom Sensor → Fehlermeldung des Servers
4 Temperaturwert unplausibel  → Abfrage an Sensor wiederholen, wenn mehrfach
unplausibler Wert: Fehlerhinweis des Servers
Timeouts setzen !

Protokoll:
vom Client an Server gesendeter String: „get Temp <Raumbezeichner>“
von Server an Client gesendeter String: „Temp <Raumbezeichner> 0 <float-zahl>“
(kein Fehler) bzw. „Temp <Raumbezeichner> <Fehlernummer> <Fehlermeldung
(optional)>“ (Fehler 1-3) bzw. „Temp <Raumbezeichner> 4 <float-zahl>“
--------------------------------------------------------------------------------






================================================================================
User Story B
================================================================================

Kurzbeschreibung:
Der Nutzer kann die Raumtemperatur für einen bestimmten Raum setzen

Priorität: (X) must | ( ) should | ( ) could | ( ) won't

Abschätzung:
1 Tag

--------------------------------------------------------------------------------
Details
--------------------------------------------------------------------------------
Auf der Konsole des Clients besteht die Möglichkeit, die Raumtemperatur
zu setzen. Der Raum muss dann angegeben (eingegeben oder ausgewählt) werden.
Die entsprechende Anfrage wird an den Server geschickt, worauf dieser die
gewünschte Temperatur in dem entsprechenden Thermostat einstellt. Das Thermostat 
antwortet dem Server, worauf dieser dem Client eine Bestätigung über die Änderung
des Soll-Wertes zurückschickt.

Fehlermöglichkeiten:
1 Server nicht erreichbar → Fehlermeldung des Clients
2 Kein Thermostat für den Raum vorhanden / zuzuordnen → Fehlermeldung des Servers
3 keine Antwort vom Sensor → Fehlermeldung des Servers
4 Thermostat liefert Fehler → Anfrage an Thermostat wiederholen, wenn mehrfach Fehler auftreten: Fehlerhinweis des Servers
Timeouts setzen !

Protokoll:
vom Client an Server gesendeter String: „set Temp <Raumbezeichner>“
von Server an Client gesendeter String: „set Temp <Raumbezeichner> 0 <float-zahl>“ (kein Fehler) 
bzw. „Temp <Raumbezeichner> <Fehlernummer> <Fehlermeldung(optional)>“ (Fehler 1-3) 
bzw. „Temp <Raumbezeichner> 4 <float-zahl>“
--------------------------------------------------------------------------------






================================================================================
User Story C
================================================================================

Kurzbeschreibung:
Der User kann die Tür für einen bestimmten Raum öffnen.

Priorität: (X) must | ( ) should | ( ) could | ( ) won't

Abschätzung:
Auf der Konsole des Clients besteht die Möglichkeit, die Raumtür
zu öffnen. Der Raum muss dann angegeben (eingegeben oder ausgewählt) werden.
Die entsprechende Anfrage wird an den Server geschickt, worauf dieser die
entsprechende Tür öffnet. Die Tür antwortet dem Server, worauf dieser dem Client 
eine Bestätigung über die Änderung des Tür-Zustandes zurückschickt.

--------------------------------------------------------------------------------
Details
--------------------------------------------------------------------------------
TBD

Fehlermöglichkeiten:
1 Server nicht erreichbar → Fehlermeldung des Clients
2 Keine Tür für den Raum vorhanden / zuzuordnen → Fehlermeldung des Servers
3 keine Antwort von der Tür → Fehlermeldung des Servers
4 Tür-Zustand unplausibel  → Abfrage an Tür wiederholen, wenn mehrfach unplausibler Wert: Fehlerhinweis des Servers
Timeouts setzen !

Protokoll:
vom Client an Server gesendeter String: „set Door <Raumbezeichner> <boolean>“
von Server an Client gesendeter String: „set Door <Raumbezeichner> 0 <boolean>“ (kein Fehler) 
bzw. „Door <Raumbezeichner> <Fehlernummer> <Fehlermeldung(optional)>“ (Fehler 1-3) 
bzw. „Door <Raumbezeichner> 4 <boolean>“
--------------------------------------------------------------------------------




================================================================================
User Story D
================================================================================

Kurzbeschreibung:
TBD

Priorität: ( ) must | ( ) should | ( ) could | ( ) won't

Abschätzung:
TBD

--------------------------------------------------------------------------------
Details
--------------------------------------------------------------------------------
TBD

Fehlermöglichkeiten:
1 Server nicht erreichbar → Fehlermeldung des Clients
2 Kein Sensor für den Raum vorhanden / zuzuordnen → Fehlermeldung des Servers
3 keine Antwort vom Sensor → Fehlermeldung des Servers
4 Temperaturwert unplausibel  → Abfrage an Sensor wiederholen, wenn mehrfach unplausibler Wert: Fehlerhinweis des Servers
Timeouts setzen !

Protokoll:
TBD
--------------------------------------------------------------------------------
